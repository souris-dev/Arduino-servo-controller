<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="richTextBox1.Text" xml:space="preserve">
    <value>Arduino Servo Controller Help

This program enables you to control the servos you have attached to an Arduino
on any COM port. It may be connected via bluetooth as well.
The steps to set up the Arduino are very simple, as follows:

1. Open the Arduino sketch: RemoteCont.ino into the Arduino IDE.
2. Upload it to the Arduino.
3. Connect it with the computer and check it is working with the Serial Monitor.
4. Note down the COM port.
5. Now you can use the Arduino Servo Controller.

You can visit the project page for further information:
http://souris-dev.github.io/Arduino-servo-controller

Enjoy! 

</value>
  </data>
</root>